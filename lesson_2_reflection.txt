What happens when you initialize a repository?  Why do you need to do it?

  There will be an empty repo. Git does not commit anything in the initial       directory the user has to invoke the commit. In this way he can add a     commit message and select the files which ought to be in the repo.

How is the staging area different from the working directory and the repository?  What value do you think it offers?


  Only those files from the working directory are in the staging area hich   were added by the command add. However it is a pre-stage of the   repository with the same connection mentioned just before. 


How can you use the staging area to make sure you have one commit per logical change?

  Je sais pas franchement.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

  Branches help to manage different versions of the actual state of code.     One can add features while keeping a stable  version also of the project for   example.

How do the diagrams help you visualize the branch structure?

  It helps to see the hierarchy and the parental relations between the   branches and commits.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

  The result contains both of the branches. We represent it this wya because it shows the both branches take part in forming the result.

What are the pros and cons of Git’s automatic merging vs. always doing merges
 manually?

  One pro for auto merge is that git saves us time by doing the simple and dull tasks of merging. One pro for manual merging is that one has the full influence over the merging.
